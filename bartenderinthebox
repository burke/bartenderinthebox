#!/usr/bin/env ruby
# -*- ruby -*-

BTB_ROOT = File.dirname(__FILE__)

require 'rubygems'
require 'yaml'
require 'readline'
require 'logger'

Dir.glob("#{BTB_ROOT}/lib/*.rb").map{ |file| require file }

DRINKS      = YAML.load(File.read("#{BTB_ROOT}/data/drinks.yml"))
INGREDIENTS = YAML.load(File.read("#{BTB_ROOT}/data/ingredients.yml"))

# BartenderInTheBox instructs the BoozeMonkey how to pour drinks, manages recipes
class BartenderInTheBox

  attr_reader :available_drinks

  def initialize
    @boozemonkey = BoozeMonkey.new
    $log = Logger.new(STDOUT)
    $log.level = Logger::DEBUG
    calculate_available_drinks
  end

  def calculate_available_drinks
    @available_drinks = {}

    inventory = @boozemonkey.inventory

    DRINKS.each do |id,drink|
      pass = true
      drink[:ingredients].each do |ingred_id,ingred_quantity|
        pass = false if !inventory.index(ingred_id)
      end
      @available_drinks.merge!({id => drink}) if pass == true
    end
  end

  def mix( id )
    if !DRINKS.has_key? id
      $log.error "Invalid Drink Specified (D##{id})"
      return
    end
    drink = DRINKS[id]
    $log.info "Starting mixing of D##{id} (#{drink[:name]})"
    @boozemonkey.dispense( drink[:ingredients] )
    $log.info "Finished mixing D##{id} (#{drink[:name]})"
  end

  def reservoir_contents
    @boozemonkey.reservoir_contents
  end

end

if __FILE__ == $0
  b = BartenderInTheBox.new

  puts "BartenderInTheBox initialized. Type 'h' for help."

  loop do
    case i = Readline::readline('btb> ')
    when /^m/i:
      b.mix(i.split(' ').last.to_i)
    when /^l/i:
      puts "== AVAILABLE DRINKS: ======="
      b.available_drinks.each do |id,attrs|
        puts "#{attrs[:name]} (#{id})"
      end
    when /^r/i:
      puts "== RESERVOIR CONTENTS: ====="
      b.reservoir_contents.each do |res|
        puts res.inspect
      end
    when /^[xq]/i, nil:
      exit(0)
    when /^\w/:
      puts "== AVAILABLE COMMANDS: ====="
      puts "  h: this menu"
      puts "  m <n>: Mix a drink"
      puts "  l: List available drinks"
      puts "  r: Show reservoir contents"
      puts "  x: Exit program"
    end
  end

end
