#!/usr/bin/env ruby

BTB_ROOT = File.dirname(__FILE__)

require 'rubygems'
require 'yaml'

require "#{BTB_ROOT}/lib/booze_monkey"

# Instructs the BoozeMonkey how to pour drinks, manages recipes
class BartenderInTheBox
  
  def initialize
    @drinks      = YAML.load(File.read("#{BTB_ROOT}/data/drinks.yml"))
    @ingredients = YAML.load(File.read("#{BTB_ROOT}/data/ingredients.yml"))

    @boozemonkey = BoozeMonkey.new

    #calculate_available_drinks
  end

  def calculate_available_drinks
    @available_drinks = {}

    @drinks.each do |k,v|
      pass = true
      v[:ingredients].each do |ki,vi|
        pass = false if !@ingredients_by_reservoir[ki]
      end
      @available_drinks.merge!({k => v}) if pass == true
    end
  end
  
  def mix( id )
    if !@drinks.has_key? id
      puts "Drink not recognized. Aborting."
      return
    end
    drink = @drinks[id]
    puts "Concocting one #{drink[:name]}. Please hold."
    drink[:ingredients].each do |id, quantity|
       @boozemonkey.dispense( id, quantity )
    end
    puts "Mixing complete. Enjoy your #{drink[:name]}!"
  end
  

  def list_available_drinks
    @available_drinks.each do |k,v|
      puts "#{v[:name]} (#{k})"
    end
  end

  def list_reservoir_contents
    @reservoirs.each do |k,v|
      puts "#{k}: #{@ingredients[v][:name]}"
    end
  end
  
end

if __FILE__ == $0
  b = BartenderInTheBox.new

  puts "BartenderInTheBox initialized. Type 'h' for help."
  
  loop do
    print 'btb> '
    case i = gets
    when /^m/i:
      b.mix(i.split(' ').last.to_i)
    when /^l/i:
      puts "== AVAILABLE DRINKS: ======="
      b.list_available_drinks
    when /^r/i:
      puts "== RESERVOIR CONTENTS: ====="
      b.list_reservoir_contents
    when /^[xq]/i, nil:
      exit(0)
    else
      puts "== AVAILABLE COMMANDS: ====="
      puts "  h: this menu"
      puts "  m <n>: Mix a drink"
      puts "  l: List available drinks"
      puts "  r: Show reservoir contents"
      puts "  x: Exit program"
    end
  end
  
end
